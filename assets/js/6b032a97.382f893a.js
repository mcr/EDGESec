"use strict";(self.webpackChunkdocusaurus=self.webpackChunkdocusaurus||[]).push([[490],{3905:function(e,n,t){t.d(n,{Zo:function(){return s},kt:function(){return g}});var r=t(7294);function o(e,n,t){return n in e?Object.defineProperty(e,n,{value:t,enumerable:!0,configurable:!0,writable:!0}):e[n]=t,e}function a(e,n){var t=Object.keys(e);if(Object.getOwnPropertySymbols){var r=Object.getOwnPropertySymbols(e);n&&(r=r.filter((function(n){return Object.getOwnPropertyDescriptor(e,n).enumerable}))),t.push.apply(t,r)}return t}function i(e){for(var n=1;n<arguments.length;n++){var t=null!=arguments[n]?arguments[n]:{};n%2?a(Object(t),!0).forEach((function(n){o(e,n,t[n])})):Object.getOwnPropertyDescriptors?Object.defineProperties(e,Object.getOwnPropertyDescriptors(t)):a(Object(t)).forEach((function(n){Object.defineProperty(e,n,Object.getOwnPropertyDescriptor(t,n))}))}return e}function d(e,n){if(null==e)return{};var t,r,o=function(e,n){if(null==e)return{};var t,r,o={},a=Object.keys(e);for(r=0;r<a.length;r++)t=a[r],n.indexOf(t)>=0||(o[t]=e[t]);return o}(e,n);if(Object.getOwnPropertySymbols){var a=Object.getOwnPropertySymbols(e);for(r=0;r<a.length;r++)t=a[r],n.indexOf(t)>=0||Object.prototype.propertyIsEnumerable.call(e,t)&&(o[t]=e[t])}return o}var c=r.createContext({}),l=function(e){var n=r.useContext(c),t=n;return e&&(t="function"==typeof e?e(n):i(i({},n),e)),t},s=function(e){var n=l(e.components);return r.createElement(c.Provider,{value:n},e.children)},p={inlineCode:"code",wrapper:function(e){var n=e.children;return r.createElement(r.Fragment,{},n)}},u=r.forwardRef((function(e,n){var t=e.components,o=e.mdxType,a=e.originalType,c=e.parentName,s=d(e,["components","mdxType","originalType","parentName"]),u=l(t),g=o,m=u["".concat(c,".").concat(g)]||u[g]||p[g]||a;return t?r.createElement(m,i(i({ref:n},s),{},{components:t})):r.createElement(m,i({ref:n},s))}));function g(e,n){var t=arguments,o=n&&n.mdxType;if("string"==typeof e||o){var a=t.length,i=new Array(a);i[0]=u;var d={};for(var c in n)hasOwnProperty.call(n,c)&&(d[c]=n[c]);d.originalType=e,d.mdxType="string"==typeof e?e:o,i[1]=d;for(var l=2;l<a;l++)i[l]=t[l];return r.createElement.apply(null,i)}return r.createElement.apply(null,t)}u.displayName="MDXCreateElement"},4598:function(e,n,t){t.r(n),t.d(n,{frontMatter:function(){return d},contentTitle:function(){return c},metadata:function(){return l},toc:function(){return s},default:function(){return u}});var r=t(7462),o=t(3366),a=(t(7294),t(3905)),i=["components"],d={slug:"running",title:"Running"},c=void 0,l={unversionedId:"running",id:"running",isDocsHomePage:!1,title:"Running",description:"To run `edgesec` tool with the configuration file `dev-config.ini` located in `./build` folder use:",source:"@site/docs/running.md",sourceDirName:".",slug:"/running",permalink:"/EDGESec/docs/running",editUrl:"https://github.com/nqminds/docusaurus-template/edit/master/docs/running.md",tags:[],version:"current",frontMatter:{slug:"running",title:"Running"},sidebar:"someSidebar",previous:{title:"Installation",permalink:"/EDGESec/docs/installation"},next:{title:"Configuration File",permalink:"/EDGESec/docs/config"}},s=[{value:"Running edgesec tool with debug info and master password <code>12345</code> (verbose)",id:"running-edgesec-tool-with-debug-info-and-master-password-12345-verbose",children:[],level:5},{value:"Running capsrv tool with syncing of <code>br10</code> interface to <code>localhost:8512</code> with grpc CA located in <code>/cert/CA/CA.pem</code> and data stored in <code>./db</code> folder (verbose)",id:"running-capsrv-tool-with-syncing-of-br10-interface-to-localhost8512-with-grpc-ca-located-in-certcacapem-and-data-stored-in-db-folder-verbose",children:[],level:5},{value:"Running capsrv in cleaning mode only (verbose)",id:"running-capsrv-in-cleaning-mode-only-verbose",children:[],level:5},{value:"Running revclient to <code>localhost:8514</code> with grpc CA located in <code>/cert/CA/CA.pem</code> and data stored in <code>./db</code> folder (verbose):",id:"running-revclient-to-localhost8514-with-grpc-ca-located-in-certcacapem-and-data-stored-in-db-folder-verbose",children:[],level:5},{value:"Running revclient to <code>localhost:8514</code> without grpc CA and data stored in <code>./db</code> folder:",id:"running-revclient-to-localhost8514-without-grpc-ca-and-data-stored-in-db-folder",children:[],level:5},{value:"Cloud server - Running revsrv on port <code>8514</code> (verbose):",id:"cloud-server---running-revsrv-on-port-8514-verbose",children:[],level:5}],p={toc:s};function u(e){var n=e.components,t=(0,o.Z)(e,i);return(0,a.kt)("wrapper",(0,r.Z)({},p,t,{components:n,mdxType:"MDXLayout"}),(0,a.kt)("p",null,"To run ",(0,a.kt)("inlineCode",{parentName:"p"},"edgesec")," tool with the configuration file ",(0,a.kt)("inlineCode",{parentName:"p"},"dev-config.ini")," located in ",(0,a.kt)("inlineCode",{parentName:"p"},"./build")," folder use:"),(0,a.kt)("pre",null,(0,a.kt)("code",{parentName:"pre",className:"language-console"},"./build/src/edgesec -c ./build/dev-config.ini\n")),(0,a.kt)("p",null,"To enable verbose debug mode use:"),(0,a.kt)("pre",null,(0,a.kt)("code",{parentName:"pre",className:"language-console"},"./build/src/edgesec -c ./build/dev-config.ini -ddddd\n")),(0,a.kt)("p",null,"The configuration file ",(0,a.kt)("inlineCode",{parentName:"p"},"config.ini")," has been setup to work by default only when:"),(0,a.kt)("ul",null,(0,a.kt)("li",{parentName:"ul"},"running on Raspberry Pi (e.g. ",(0,a.kt)("inlineCode",{parentName:"li"},"wlan1")," is the name of Wifi USB AP and ",(0,a.kt)("inlineCode",{parentName:"li"},"eth0")," is the ethernet port)"),(0,a.kt)("li",{parentName:"ul"},"running after ",(0,a.kt)("inlineCode",{parentName:"li"},"make install")," has been run")),(0,a.kt)("h5",{id:"running-edgesec-tool-with-debug-info-and-master-password-12345-verbose"},"Running edgesec tool with debug info and master password ",(0,a.kt)("inlineCode",{parentName:"h5"},"12345")," (verbose)"),(0,a.kt)("pre",null,(0,a.kt)("code",{parentName:"pre",className:"language-bash"},"sudo ./src/edgesec -c config.ini -s 12345 -ddddddddd\n")),(0,a.kt)("h5",{id:"running-capsrv-tool-with-syncing-of-br10-interface-to-localhost8512-with-grpc-ca-located-in-certcacapem-and-data-stored-in-db-folder-verbose"},"Running capsrv tool with syncing of ",(0,a.kt)("inlineCode",{parentName:"h5"},"br10")," interface to ",(0,a.kt)("inlineCode",{parentName:"h5"},"localhost:8512")," with grpc CA located in ",(0,a.kt)("inlineCode",{parentName:"h5"},"/cert/CA/CA.pem")," and data stored in ",(0,a.kt)("inlineCode",{parentName:"h5"},"./db")," folder (verbose)"),(0,a.kt)("pre",null,(0,a.kt)("code",{parentName:"pre",className:"language-bash"},"sudo ./src/capsrv -i br10 -t 10 -n 10 -y default -w -s -p ./db -a localhost -o 8512 -k ./cert/CA/CA.pem -r 1000000,100 -dddddddddd\n")),(0,a.kt)("h5",{id:"running-capsrv-in-cleaning-mode-only-verbose"},"Running capsrv in cleaning mode only (verbose)"),(0,a.kt)("p",null,"Scans ",(0,a.kt)("inlineCode",{parentName:"p"},"./db/pcap-meta.sqlite")," until pcap capture has reached ",(0,a.kt)("inlineCode",{parentName:"p"},"-b 20971520")," KiB (aka 20 GiB)."),(0,a.kt)("pre",null,(0,a.kt)("code",{parentName:"pre",className:"language-bash"},"./src/capsrv -p ./db -b 20971520 -dddddddd\n")),(0,a.kt)("p",null,"Running restsrv on port ",(0,a.kt)("inlineCode",{parentName:"p"},"8513")," with TLS certificate generation for ",(0,a.kt)("inlineCode",{parentName:"p"},"localhost")," (verbose):"),(0,a.kt)("pre",null,(0,a.kt)("code",{parentName:"pre",className:"language-bash"},"sudo ./src/restsrv -s /tmp/edgesec-domain-server -p 8513 -z 32 -c localhost -t -dddddddd\n")),(0,a.kt)("h5",{id:"running-revclient-to-localhost8514-with-grpc-ca-located-in-certcacapem-and-data-stored-in-db-folder-verbose"},"Running revclient to ",(0,a.kt)("inlineCode",{parentName:"h5"},"localhost:8514")," with grpc CA located in ",(0,a.kt)("inlineCode",{parentName:"h5"},"/cert/CA/CA.pem")," and data stored in ",(0,a.kt)("inlineCode",{parentName:"h5"},"./db")," folder (verbose):"),(0,a.kt)("p",null,"Normally, you'd want to connect to a cloud server, but for testing, we can use ",(0,a.kt)("inlineCode",{parentName:"p"},"localhost"),". Port and cert should match parameters passed to ",(0,a.kt)("inlineCode",{parentName:"p"},"revsrv"),":"),(0,a.kt)("pre",null,(0,a.kt)("code",{parentName:"pre",className:"language-bash"},"sudo ./src/revclient -f ./db -a localhost -p 8514 -c ./cert/CA/CA.pem -dddddddd\n")),(0,a.kt)("h5",{id:"running-revclient-to-localhost8514-without-grpc-ca-and-data-stored-in-db-folder"},"Running revclient to ",(0,a.kt)("inlineCode",{parentName:"h5"},"localhost:8514")," without grpc CA and data stored in ",(0,a.kt)("inlineCode",{parentName:"h5"},"./db")," folder:"),(0,a.kt)("pre",null,(0,a.kt)("code",{parentName:"pre",className:"language-bash"},"sudo ./src/revclient -f ./db -a localhost -p 8514\n")),(0,a.kt)("h5",{id:"cloud-server---running-revsrv-on-port-8514-verbose"},"Cloud server - Running revsrv on port ",(0,a.kt)("inlineCode",{parentName:"h5"},"8514")," (verbose):"),(0,a.kt)("p",null,"The following programs are designed to run on a publically accesible server, that an EDGESec toolset can connect to."),(0,a.kt)("p",null,"The GRPC certificate authority (",(0,a.kt)("inlineCode",{parentName:"p"},"-a <example.CA.pem>"),") MUST match the certificate authority passed to ",(0,a.kt)("inlineCode",{parentName:"p"},"revclient")," on the EDGEsec device."),(0,a.kt)("p",null,"Make sure that your server SSL certificate has the appropriate hostname (e.g. ",(0,a.kt)("inlineCode",{parentName:"p"},"localhost"),", or ",(0,a.kt)("inlineCode",{parentName:"p"},"edgesec-1.nqm-1.com"),")."),(0,a.kt)("pre",null,(0,a.kt)("code",{parentName:"pre",className:"language-bash"},"sudo ./revsrv -p 8514 -a /etc/edgesec/CA/CA.pem -c /etc/edgesec/revsrv/server.crt -k /etc/edgesec/revsrv/server.key -dddddd\n")))}u.isMDXComponent=!0}}]);