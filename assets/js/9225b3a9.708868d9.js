"use strict";(self.webpackChunkdocusaurus=self.webpackChunkdocusaurus||[]).push([[446],{3905:function(e,t,n){n.d(t,{Zo:function(){return d},kt:function(){return u}});var i=n(7294);function r(e,t,n){return t in e?Object.defineProperty(e,t,{value:n,enumerable:!0,configurable:!0,writable:!0}):e[t]=n,e}function a(e,t){var n=Object.keys(e);if(Object.getOwnPropertySymbols){var i=Object.getOwnPropertySymbols(e);t&&(i=i.filter((function(t){return Object.getOwnPropertyDescriptor(e,t).enumerable}))),n.push.apply(n,i)}return n}function l(e){for(var t=1;t<arguments.length;t++){var n=null!=arguments[t]?arguments[t]:{};t%2?a(Object(n),!0).forEach((function(t){r(e,t,n[t])})):Object.getOwnPropertyDescriptors?Object.defineProperties(e,Object.getOwnPropertyDescriptors(n)):a(Object(n)).forEach((function(t){Object.defineProperty(e,t,Object.getOwnPropertyDescriptor(n,t))}))}return e}function o(e,t){if(null==e)return{};var n,i,r=function(e,t){if(null==e)return{};var n,i,r={},a=Object.keys(e);for(i=0;i<a.length;i++)n=a[i],t.indexOf(n)>=0||(r[n]=e[n]);return r}(e,t);if(Object.getOwnPropertySymbols){var a=Object.getOwnPropertySymbols(e);for(i=0;i<a.length;i++)n=a[i],t.indexOf(n)>=0||Object.prototype.propertyIsEnumerable.call(e,n)&&(r[n]=e[n])}return r}var s=i.createContext({}),p=function(e){var t=i.useContext(s),n=t;return e&&(n="function"==typeof e?e(t):l(l({},t),e)),n},d=function(e){var t=p(e.components);return i.createElement(s.Provider,{value:t},e.children)},c={inlineCode:"code",wrapper:function(e){var t=e.children;return i.createElement(i.Fragment,{},t)}},h=i.forwardRef((function(e,t){var n=e.components,r=e.mdxType,a=e.originalType,s=e.parentName,d=o(e,["components","mdxType","originalType","parentName"]),h=p(n),u=r,g=h["".concat(s,".").concat(u)]||h[u]||c[u]||a;return n?i.createElement(g,l(l({ref:t},d),{},{components:n})):i.createElement(g,l({ref:t},d))}));function u(e,t){var n=arguments,r=t&&t.mdxType;if("string"==typeof e||r){var a=n.length,l=new Array(a);l[0]=h;var o={};for(var s in t)hasOwnProperty.call(t,s)&&(o[s]=t[s]);o.originalType=e,o.mdxType="string"==typeof e?e:r,l[1]=o;for(var p=2;p<a;p++)l[p]=n[p];return i.createElement.apply(null,l)}return i.createElement.apply(null,n)}h.displayName="MDXCreateElement"},1025:function(e,t,n){n.r(t),n.d(t,{frontMatter:function(){return o},contentTitle:function(){return s},metadata:function(){return p},toc:function(){return d},default:function(){return h}});var i=n(7462),r=n(3366),a=(n(7294),n(3905)),l=["components"],o={slug:"config",title:"Configuration File"},s=void 0,p={unversionedId:"config",id:"config",isDocsHomePage:!1,title:"Configuration File",description:"Below is an example of the configuration file that is passed as a parameter to edgesec tool:",source:"@site/docs/config.md",sourceDirName:".",slug:"/config",permalink:"/EDGESec/docs/config",editUrl:"https://github.com/nqminds/docusaurus-template/edit/master/docs/config.md",tags:[],version:"current",frontMatter:{slug:"config",title:"Configuration File"},sidebar:"someSidebar",previous:{title:"Running",permalink:"/EDGESec/docs/running"},next:{title:"Control Commands",permalink:"/EDGESec/docs/commands"}},d=[{value:"system group",id:"system-group",children:[{value:"binPath (string)",id:"binpath-string",children:[],level:3},{value:"hashIpCommand (string)",id:"hashipcommand-string",children:[],level:3},{value:"createInterfaces (boolean)",id:"createinterfaces-boolean",children:[],level:3},{value:"ignoreErrorOnIfCreate (boolean)",id:"ignoreerroronifcreate-boolean",children:[],level:3},{value:"allowAllConnections (boolean)",id:"allowallconnections-boolean",children:[],level:3},{value:"allowAllNat (boolean)",id:"allowallnat-boolean",children:[],level:3},{value:"apDetect (boolean)",id:"apdetect-boolean",children:[],level:3},{value:"generateSsid (boolean)",id:"generatessid-boolean",children:[],level:3},{value:"allocateVlans (boolean)",id:"allocatevlans-boolean",children:[],level:3},{value:"defaultOpenVlanId (integer)",id:"defaultopenvlanid-integer",children:[],level:3},{value:"quarantineVlanId (integer)",id:"quarantinevlanid-integer",children:[],level:3},{value:"riskScore (integer)",id:"riskscore-integer",children:[],level:3},{value:"killRunningProcess (boolean)",id:"killrunningprocess-boolean",children:[],level:3},{value:"execAp (boolean)",id:"execap-boolean",children:[],level:3},{value:"execRadius (boolean)",id:"execradius-boolean",children:[],level:3},{value:"execDhcp (boolean)",id:"execdhcp-boolean",children:[],level:3},{value:"execCapture (boolean)",id:"execcapture-boolean",children:[],level:3},{value:"execMdnsForward (boolean)",id:"execmdnsforward-boolean",children:[],level:3},{value:"execIptables (boolean)",id:"execiptables-boolean",children:[],level:3},{value:"setIpForward (boolean)",id:"setipforward-boolean",children:[],level:3},{value:"dbPath (string)",id:"dbpath-string",children:[],level:3},{value:"cryptDbPath (string)",id:"cryptdbpath-string",children:[],level:3},{value:"cryptKeyId (string)",id:"cryptkeyid-string",children:[],level:3},{value:"pidFilePath (string)",id:"pidfilepath-string",children:[],level:3}],level:2},{value:"capture group",id:"capture-group",children:[{value:"captureBinPath (string)",id:"capturebinpath-string",children:[],level:3},{value:"captureInterface (string)",id:"captureinterface-string",children:[],level:3},{value:"filter (string)",id:"filter-string",children:[],level:3},{value:"promiscuous (boolean)",id:"promiscuous-boolean",children:[],level:3},{value:"bufferTimeout (number)",id:"buffertimeout-number",children:[],level:3},{value:"processInterval (number)",id:"processinterval-number",children:[],level:3},{value:"immediate (boolean)",id:"immediate-boolean",children:[],level:3},{value:"analyser (string)",id:"analyser-string",children:[],level:3},{value:"fileWrite (boolean)",id:"filewrite-boolean",children:[],level:3},{value:"dbWrite (boolean)",id:"dbwrite-boolean",children:[],level:3},{value:"dbSync (boolean)",id:"dbsync-boolean",children:[],level:3},{value:"dbSyncAddress (string)",id:"dbsyncaddress-string",children:[],level:3},{value:"dbSyncPort (number)",id:"dbsyncport-number",children:[],level:3},{value:"syncCaPath (string)",id:"synccapath-string",children:[],level:3},{value:"command (string)",id:"command-string",children:[],level:3},{value:"syncStoreSize (integer)",id:"syncstoresize-integer",children:[],level:3},{value:"syncSendSize (integer)",id:"syncsendsize-integer",children:[],level:3},{value:"captureStoreSize (integer)",id:"capturestoresize-integer",children:[],level:3}],level:2},{value:"supervisor group",id:"supervisor-group",children:[{value:"domainServerPath (string)",id:"domainserverpath-string",children:[],level:3},{value:"delim (integer)",id:"delim-integer",children:[],level:3}],level:2},{value:"ap group",id:"ap-group",children:[{value:"apBinPath (string)",id:"apbinpath-string",children:[],level:3},{value:"apFilePath (string)",id:"apfilepath-string",children:[],level:3},{value:"apLogPath (string)",id:"aplogpath-string",children:[],level:3},{value:"interface (string)",id:"interface-string",children:[],level:3},{value:"vlanTaggedInterface (string)",id:"vlantaggedinterface-string",children:[],level:3},{value:"ssid (string)",id:"ssid-string",children:[],level:3},{value:"wpaPassphrase (string)",id:"wpapassphrase-string",children:[],level:3},{value:"bridge (string)",id:"bridge-string",children:[],level:3},{value:"driver (string)",id:"driver-string",children:[],level:3},{value:"hwMode (string)",id:"hwmode-string",children:[],level:3},{value:"channel (integer)",id:"channel-integer",children:[],level:3},{value:"wmmEnabled (integer)",id:"wmmenabled-integer",children:[],level:3},{value:"authAlgs (integer)",id:"authalgs-integer",children:[],level:3},{value:"wpa (integer)",id:"wpa-integer",children:[],level:3},{value:"wpaKeyMgmt (string)",id:"wpakeymgmt-string",children:[],level:3},{value:"rsnPairwise (string)",id:"rsnpairwise-string",children:[],level:3},{value:"ctrlInterface (string)",id:"ctrlinterface-string",children:[],level:3},{value:"macaddrAcl (integer)",id:"macaddracl-integer",children:[],level:3},{value:"dynamicVlan (integer)",id:"dynamicvlan-integer",children:[],level:3},{value:"vlanBridge (string)",id:"vlanbridge-string",children:[],level:3},{value:"vlanFile (string)",id:"vlanfile-string",children:[],level:3},{value:"loggerStdout (integer)",id:"loggerstdout-integer",children:[],level:3},{value:"loggerStdoutLevel (integer)",id:"loggerstdoutlevel-integer",children:[],level:3},{value:"loggerSyslog (integer)",id:"loggersyslog-integer",children:[],level:3},{value:"loggerSyslogLevel (integer)",id:"loggersysloglevel-integer",children:[],level:3},{value:"ignoreBroadcastSsid (integer)",id:"ignorebroadcastssid-integer",children:[],level:3},{value:"wpaPskRadius (integer)",id:"wpapskradius-integer",children:[],level:3}],level:2},{value:"radius group",id:"radius-group",children:[{value:"port (integer)",id:"port-integer",children:[],level:3},{value:"clientIP (string)",id:"clientip-string",children:[],level:3},{value:"clientMask (integer)",id:"clientmask-integer",children:[],level:3},{value:"serverIP (string)",id:"serverip-string",children:[],level:3},{value:"serverMask (integer)",id:"servermask-integer",children:[],level:3},{value:"secret (string)",id:"secret-string",children:[],level:3}],level:2},{value:"nat group",id:"nat-group",children:[{value:"natInterface (string)",id:"natinterface-string",children:[],level:3}],level:2},{value:"dns group",id:"dns-group",children:[{value:"servers (string)",id:"servers-string",children:[],level:3},{value:"mdnsBinPath (string)",id:"mdnsbinpath-string",children:[],level:3},{value:"mdnsReflectIp4 (boolean)",id:"mdnsreflectip4-boolean",children:[],level:3},{value:"mdnsReflectIp6 (boolean)",id:"mdnsreflectip6-boolean",children:[],level:3},{value:"mdnsFilter (string)",id:"mdnsfilter-string",children:[],level:3}],level:2},{value:"dhcp group",id:"dhcp-group",children:[{value:"dhcpBinPath (string)",id:"dhcpbinpath-string",children:[],level:3},{value:"dhcpConfigPath (string)",id:"dhcpconfigpath-string",children:[],level:3},{value:"dhcpScriptPath (string)",id:"dhcpscriptpath-string",children:[],level:3},{value:"dhcpLeasefilePath (string)",id:"dhcpleasefilepath-string",children:[],level:3},{value:"dhcpRangei (string)",id:"dhcprangei-string",children:[],level:3}],level:2},{value:"interfaces groups",id:"interfaces-groups",children:[{value:"ifi (string)",id:"ifi-string",children:[],level:3}],level:2}],c={toc:d};function h(e){var t=e.components,n=(0,r.Z)(e,l);return(0,a.kt)("wrapper",(0,i.Z)({},c,n,{components:t,mdxType:"MDXLayout"}),(0,a.kt)("p",null,"Below is an example of the configuration file that is passed as a parameter to ",(0,a.kt)("inlineCode",{parentName:"p"},"edgesec")," tool:"),(0,a.kt)("pre",null,(0,a.kt)("code",{parentName:"pre"},'[system]\nbinPath = "/usr/local/sbin:/usr/local/bin:/usr/sbin:/usr/bin:/sbin:/bin:/snap/bin"\nhashIpCommand = ""\ncreateInterfaces = true\nignoreErrorOnIfCreate = true\nallowAllConnections = true\nallowAllNat = true\napDetect = false\ngenerateSsid = true\nallocateVlans = true\ndefaultOpenVlanId = 0\nquarantineVlanId = 10\nriskScore = 100\nkillRunningProcess = false\nexecAp = false\nexecRadius = true\nexecDhcp = true\nexecCapture = true\nexecMdnsForward = true\nexecIptables = true\nsetIpForward = true\ndbPath = "./db"\ncryptDbPath = "./crypt.sqlite"\ncryptKeyId = "master"\npidFilePath = "/var/run/edgesec.pid"\n\n[capture]\ncaptureBinPath = "./src/capsrv"\ncaptureInterface = "enp2s0"\nfilter = "" \npromiscuous = false\nbufferTimeout = 10\nprocessInterval = 10\nimmediate = false\nanalyser = "default"\nfileWrite = true\ndbWrite = true\ndbSync = false\ndbSyncAddress = "localhost"\ndbSyncPort = 8512\nsyncCaPath = "./cert/CA/CA.pem"\ncommand = "SET_ALERT"\nsyncStoreSize = 1000\nsyncSendSize = 20\ncaptureStoreSize = 1000000\n\n[supervisor]\ndomainServerPath = "/tmp/edgesec-domain-server"\ndelim = 32\n\n[ap]\napBinPath = "./hostapd"\napFilePath = "/tmp/hostapd.conf"\napLogPath = "/tmp/hostapd.log"\ninterface = "wifiap0"\nvlanTaggedInterface = ""\nssid = "IOTH_TEST"\nwpaPassphrase = "1234554321"\nbridge = "br0"\ndriver = "nl80211"\nhwMode = "g"\nchannel = 11\nwmmEnabled = 1\nauthAlgs = 1\nwpa = 2\nwpaKeyMgmt = "WPA-PSK"\nrsnPairwise = "CCMP"\nctrlInterface = "/var/run/hostapd"\nmacaddrAcl = 2\ndynamicVlan = 1\nvlanBridge = "br"\nvlanFile = "/tmp/hostapd.vlan"\nloggerStdout = -1\nloggerStdoutLevel = 0\nloggerSyslog = -1\nloggerSyslogLevel = 0\nignoreBroadcastSsid = 0\nwpaPskRadius = 2\n\n[radius]\nport = 1812\nclientIP = "127.0.0.1"\nclientMask = 32\nserverIP = "127.0.0.1"\nserverMask = 32\nsecret = "radius"\n\n[nat]\nnatInterface = "enp2s0"\n\n[dns]\nservers = "8.8.4.4,8.8.8.8"\nmdnsBinPath = "./src/mdnsf"\nmdnsReflectIp4 = true\nmdnsReflectIp6 = true\nmdnsFilter = "src net 10.0 and dst net 10.0"\n\n[dhcp]\ndhcpBinPath = "/usr/sbin/dnsmasq"\ndhcpConfigPath = "/tmp/dnsmasq.conf"\ndhcpScriptPath = "/tmp/dnsmasq_exec.sh"\ndhcpLeasefilePath = "./db/dnsmasq.leases"\ndhcpRange0 = "0,10.0.0.2,10.0.0.254,255.255.255.0,24h"\ndhcpRange1 = "1,10.0.1.2,10.0.1.254,255.255.255.0,24h"\ndhcpRange2 = "2,10.0.2.2,10.0.2.254,255.255.255.0,24h"\ndhcpRange3 = "3,10.0.3.2,10.0.3.254,255.255.255.0,24h"\ndhcpRange4 = "4,10.0.4.2,10.0.4.254,255.255.255.0,24h"\ndhcpRange5 = "5,10.0.5.2,10.0.5.254,255.255.255.0,24h"\ndhcpRange6 = "6,10.0.6.2,10.0.6.254,255.255.255.0,24h"\ndhcpRange7 = "7,10.0.7.2,10.0.7.254,255.255.255.0,24h"\ndhcpRange8 = "8,10.0.8.2,10.0.8.254,255.255.255.0,24h"\ndhcpRange9 = "9,10.0.9.2,10.0.9.254,255.255.255.0,24h"\ndhcpRange10 = "10,10.0.10.2,10.0.10.254,255.255.255.0,24h"\n\n[interfaces]\nif0 = "0,10.0.0.1,10.0.0.255,255.255.255.0"\nif1 = "1,10.0.1.1,10.0.1.255,255.255.255.0"\nif2 = "2,10.0.2.1,10.0.2.255,255.255.255.0"\nif3 = "3,10.0.3.1,10.0.3.255,255.255.255.0"\nif4 = "4,10.0.4.1,10.0.4.255,255.255.255.0"\nif5 = "5,10.0.5.1,10.0.5.255,255.255.255.0"\nif6 = "6,10.0.6.1,10.0.6.255,255.255.255.0"\nif7 = "7,10.0.7.1,10.0.7.255,255.255.255.0"\nif8 = "8,10.0.8.1,10.0.8.255,255.255.255.0"\nif9 = "9,10.0.9.1,10.0.9.255,255.255.255.0"\nif10 = "10,10.0.10.1,10.0.10.255,255.255.255.0"\n')),(0,a.kt)("p",null,"The configuration file is based on the ",(0,a.kt)("inlineCode",{parentName:"p"},"ini")," file type format. Each parameter in the file is set using a key and a value pair. The ",(0,a.kt)("inlineCode",{parentName:"p"},"edgesec")," configuration file is composed of the following groups:"),(0,a.kt)("ul",null,(0,a.kt)("li",{parentName:"ul"},(0,a.kt)("em",{parentName:"li"},"[system]")),(0,a.kt)("li",{parentName:"ul"},(0,a.kt)("em",{parentName:"li"},"[capture]")),(0,a.kt)("li",{parentName:"ul"},(0,a.kt)("em",{parentName:"li"},"[supervisor]")),(0,a.kt)("li",{parentName:"ul"},(0,a.kt)("em",{parentName:"li"},"[hostapd]")),(0,a.kt)("li",{parentName:"ul"},(0,a.kt)("em",{parentName:"li"},"[radius]")),(0,a.kt)("li",{parentName:"ul"},(0,a.kt)("em",{parentName:"li"},"[nat]")),(0,a.kt)("li",{parentName:"ul"},(0,a.kt)("em",{parentName:"li"},"[dns]")),(0,a.kt)("li",{parentName:"ul"},(0,a.kt)("em",{parentName:"li"},"[dhcp]")),(0,a.kt)("li",{parentName:"ul"},(0,a.kt)("em",{parentName:"li"},"[connections]")),(0,a.kt)("li",{parentName:"ul"},(0,a.kt)("em",{parentName:"li"},"[interfaces]"))),(0,a.kt)("h2",{id:"system-group"},"[system]"," group"),(0,a.kt)("p",null,"The system group contains all the parameters that are reponsible to configure the ",(0,a.kt)("inlineCode",{parentName:"p"},"edgesec")," system tool paths, the hashes of the system binaries and tool flags."),(0,a.kt)("h3",{id:"binpath-string"},"binPath (string)"),(0,a.kt)("p",null,'A list of systems binary paths separated with ":" used by the ',(0,a.kt)("inlineCode",{parentName:"p"},"edgesec")," tool to configure interfaces, etc."),(0,a.kt)("h3",{id:"hashipcommand-string"},"hashIpCommand (string)"),(0,a.kt)("p",null,"A list of hashes for each system binary used by the tool. ","[WIP]"),(0,a.kt)("h3",{id:"createinterfaces-boolean"},"createInterfaces (boolean)"),(0,a.kt)("p",null,(0,a.kt)("inlineCode",{parentName:"p"},"edgesec")," will create subnetnetwork interfaces if the flag is set to ",(0,a.kt)("inlineCode",{parentName:"p"},"true"),". If set to ",(0,a.kt)("inlineCode",{parentName:"p"},"false")," one will have to use a similar service to ",(0,a.kt)("inlineCode",{parentName:"p"},"dhcpcd")," to preconfigure the network interfaces."),(0,a.kt)("h3",{id:"ignoreerroronifcreate-boolean"},"ignoreErrorOnIfCreate (boolean)"),(0,a.kt)("p",null,"If set to ",(0,a.kt)("inlineCode",{parentName:"p"},"true"),", ",(0,a.kt)("inlineCode",{parentName:"p"},"edgesec"),' will ignore the "network interface already exists" error. This flag is to be used if the network interfaces are already preconfigured.'),(0,a.kt)("h3",{id:"allowallconnections-boolean"},"allowAllConnections (boolean)"),(0,a.kt)("p",null,"If set to ",(0,a.kt)("inlineCode",{parentName:"p"},"true"),", ",(0,a.kt)("inlineCode",{parentName:"p"},"edgesec")," will allow all WiFi connection requests regarding of the MAC value."),(0,a.kt)("h3",{id:"allowallnat-boolean"},"allowAllNat (boolean)"),(0,a.kt)("p",null,"If set to ",(0,a.kt)("inlineCode",{parentName:"p"},"true"),", ",(0,a.kt)("inlineCode",{parentName:"p"},"edgesec")," will allow all NAT connection requests regarding of the MAC value."),(0,a.kt)("h3",{id:"apdetect-boolean"},"apDetect (boolean)"),(0,a.kt)("p",null,"If set to ",(0,a.kt)("inlineCode",{parentName:"p"},"true"),", ",(0,a.kt)("inlineCode",{parentName:"p"},"edgesec")," will try to detect the WiFi network interfaces that supports VLAN capability. The detected network interface will be used by ",(0,a.kt)("inlineCode",{parentName:"p"},"hostapd")," service to create an AP."),(0,a.kt)("h3",{id:"generatessid-boolean"},"generateSsid (boolean)"),(0,a.kt)("p",null,"If set to ",(0,a.kt)("inlineCode",{parentName:"p"},"true"),", ",(0,a.kt)("inlineCode",{parentName:"p"},"edgesec")," will generate the SSID WiFi name based on hostname. If ",(0,a.kt)("inlineCode",{parentName:"p"},"false")," the SSID name will be ",(0,a.kt)("inlineCode",{parentName:"p"},"ssid")," param from ",(0,a.kt)("inlineCode",{parentName:"p"},"ap")," section."),(0,a.kt)("h3",{id:"allocatevlans-boolean"},"allocateVlans (boolean)"),(0,a.kt)("p",null,"If set to ",(0,a.kt)("inlineCode",{parentName:"p"},"true"),", ",(0,a.kt)("inlineCode",{parentName:"p"},"edgesec")," will randomly assign a VLAN ID to a newly connected device."),(0,a.kt)("h3",{id:"defaultopenvlanid-integer"},"defaultOpenVlanId (integer)"),(0,a.kt)("p",null,"The default VLAN ID positive integer number assigned to new devices if ",(0,a.kt)("inlineCode",{parentName:"p"},"allowAllConnections")," flag is set to ",(0,a.kt)("inlineCode",{parentName:"p"},"true"),"."),(0,a.kt)("h3",{id:"quarantinevlanid-integer"},"quarantineVlanId (integer)"),(0,a.kt)("p",null,"The VLAN ID assigned to devices that are quarantined."),(0,a.kt)("h3",{id:"riskscore-integer"},"riskScore (integer)"),(0,a.kt)("p",null,"The risk score threshold for a device to be quarantined."),(0,a.kt)("h3",{id:"killrunningprocess-boolean"},"killRunningProcess (boolean)"),(0,a.kt)("p",null,"If set to true the current running ",(0,a.kt)("inlineCode",{parentName:"p"},"edgesec")," will terminate exisiting running ",(0,a.kt)("inlineCode",{parentName:"p"},"edgesec")," processes."),(0,a.kt)("h3",{id:"execap-boolean"},"execAp (boolean)"),(0,a.kt)("p",null,"If set to ",(0,a.kt)("inlineCode",{parentName:"p"},"true"),", ",(0,a.kt)("inlineCode",{parentName:"p"},"edgesec")," will execute the ",(0,a.kt)("inlineCode",{parentName:"p"},"hostapd")," service using ",(0,a.kt)("inlineCode",{parentName:"p"},"excve")," system command. If set to ",(0,a.kt)("inlineCode",{parentName:"p"},"false")," the ",(0,a.kt)("inlineCode",{parentName:"p"},"hostapd")," service has to be run before executing ",(0,a.kt)("inlineCode",{parentName:"p"},"edgesec"),"."),(0,a.kt)("h3",{id:"execradius-boolean"},"execRadius (boolean)"),(0,a.kt)("p",null,"If set to ",(0,a.kt)("inlineCode",{parentName:"p"},"true"),", ",(0,a.kt)("inlineCode",{parentName:"p"},"edgesec")," will execute the ",(0,a.kt)("inlineCode",{parentName:"p"},"radius")," service."),(0,a.kt)("h3",{id:"execdhcp-boolean"},"execDhcp (boolean)"),(0,a.kt)("p",null,"If set to ",(0,a.kt)("inlineCode",{parentName:"p"},"true"),", ",(0,a.kt)("inlineCode",{parentName:"p"},"edgesec")," will execute the ",(0,a.kt)("inlineCode",{parentName:"p"},"dhcp")," service."),(0,a.kt)("h3",{id:"execcapture-boolean"},"execCapture (boolean)"),(0,a.kt)("p",null,"If set to ",(0,a.kt)("inlineCode",{parentName:"p"},"true"),", ",(0,a.kt)("inlineCode",{parentName:"p"},"edgesec")," will execute the ",(0,a.kt)("inlineCode",{parentName:"p"},"capture")," service."),(0,a.kt)("h3",{id:"execmdnsforward-boolean"},"execMdnsForward (boolean)"),(0,a.kt)("p",null,"If set to ",(0,a.kt)("inlineCode",{parentName:"p"},"true"),", ",(0,a.kt)("inlineCode",{parentName:"p"},"edgesec")," will execute the ",(0,a.kt)("inlineCode",{parentName:"p"},"mdnsf")," service."),(0,a.kt)("h3",{id:"execiptables-boolean"},"execIptables (boolean)"),(0,a.kt)("p",null,"If set to ",(0,a.kt)("inlineCode",{parentName:"p"},"true"),", ",(0,a.kt)("inlineCode",{parentName:"p"},"edgesec")," will execute the ",(0,a.kt)("inlineCode",{parentName:"p"},"iptables")," command."),(0,a.kt)("h3",{id:"setipforward-boolean"},"setIpForward (boolean)"),(0,a.kt)("p",null,"If set to true ",(0,a.kt)("inlineCode",{parentName:"p"},"edgesec")," will set the ip forward os system param."),(0,a.kt)("h3",{id:"dbpath-string"},"dbPath (string)"),(0,a.kt)("p",null,"The path to the ",(0,a.kt)("inlineCode",{parentName:"p"},"db")," folder."),(0,a.kt)("h3",{id:"cryptdbpath-string"},"cryptDbPath (string)"),(0,a.kt)("p",null,"The path to the ",(0,a.kt)("inlineCode",{parentName:"p"},"crypt")," sqlite db."),(0,a.kt)("h3",{id:"cryptkeyid-string"},"cryptKeyId (string)"),(0,a.kt)("p",null,"The master key ID for the ",(0,a.kt)("inlineCode",{parentName:"p"},"crypt")," sqlite db."),(0,a.kt)("h3",{id:"pidfilepath-string"},"pidFilePath (string)"),(0,a.kt)("p",null,"The path to the edgesec PID file."),(0,a.kt)("h2",{id:"capture-group"},"[capture]"," group"),(0,a.kt)("p",null,"The capture group contains all the parameters that are reponsible to configure the ",(0,a.kt)("inlineCode",{parentName:"p"},"capture")," app service."),(0,a.kt)("h3",{id:"capturebinpath-string"},"captureBinPath (string)"),(0,a.kt)("p",null,"The path to the ",(0,a.kt)("inlineCode",{parentName:"p"},"capsrv")," service."),(0,a.kt)("h3",{id:"captureinterface-string"},"captureInterface (string)"),(0,a.kt)("p",null,'The name of the capture interface. If set to "any" the service will traffic from all interfaces.'),(0,a.kt)("h3",{id:"filter-string"},"filter (string)"),(0,a.kt)("p",null,"The pcap lib capture filter."),(0,a.kt)("h3",{id:"promiscuous-boolean"},"promiscuous (boolean)"),(0,a.kt)("p",null,"If set to ",(0,a.kt)("inlineCode",{parentName:"p"},"true")," the capture interface is set to promiscuous mode. The default value is ",(0,a.kt)("inlineCode",{parentName:"p"},"false"),"."),(0,a.kt)("h3",{id:"buffertimeout-number"},"bufferTimeout (number)"),(0,a.kt)("p",null,"The timeout in milliseconds to read a packet. The default value is 10."),(0,a.kt)("h3",{id:"processinterval-number"},"processInterval (number)"),(0,a.kt)("p",null,"The interval in milliseconds to process a packet from the queue. The default value is 10."),(0,a.kt)("h3",{id:"immediate-boolean"},"immediate (boolean)"),(0,a.kt)("p",null,"If set to ",(0,a.kt)("inlineCode",{parentName:"p"},"true")," the capture interface is set to immediate mode. The default value is ",(0,a.kt)("inlineCode",{parentName:"p"},"false"),"."),(0,a.kt)("h3",{id:"analyser-string"},"analyser (string)"),(0,a.kt)("p",null,"The analyser name for the capture service. Currently supported ",(0,a.kt)("inlineCode",{parentName:"p"},"default")," and ",(0,a.kt)("inlineCode",{parentName:"p"},"ndpi")," analysers."),(0,a.kt)("h3",{id:"filewrite-boolean"},"fileWrite (boolean)"),(0,a.kt)("p",null,"Write the packet data to file(s)."),(0,a.kt)("h3",{id:"dbwrite-boolean"},"dbWrite (boolean)"),(0,a.kt)("p",null,"If set to true the capture service will store the packet into an sqlite db"),(0,a.kt)("h3",{id:"dbsync-boolean"},"dbSync (boolean)"),(0,a.kt)("p",null,"If set to true the sqlite packets db will be synced"),(0,a.kt)("h3",{id:"dbsyncaddress-string"},"dbSyncAddress (string)"),(0,a.kt)("p",null,"The web address for sqlite syncing"),(0,a.kt)("h3",{id:"dbsyncport-number"},"dbSyncPort (number)"),(0,a.kt)("p",null,"The port of the web address for sqlite syncing"),(0,a.kt)("h3",{id:"synccapath-string"},"syncCaPath (string)"),(0,a.kt)("p",null,"The path to the certificate authority file used for gRPC syncing"),(0,a.kt)("h3",{id:"command-string"},"command (string)"),(0,a.kt)("p",null,"The UNIX domain command used by the capture service"),(0,a.kt)("h3",{id:"syncstoresize-integer"},"syncStoreSize (integer)"),(0,a.kt)("p",null,"Number of capture strings to store in memory before "),(0,a.kt)("h3",{id:"syncsendsize-integer"},"syncSendSize (integer)"),(0,a.kt)("p",null,"Number of string to send (sync) from the memory buffer"),(0,a.kt)("h3",{id:"capturestoresize-integer"},"captureStoreSize (integer)"),(0,a.kt)("p",null,"Number of pcap Kb to store before cleaning. Used by capture ",(0,a.kt)("inlineCode",{parentName:"p"},"cleaner")," service "),(0,a.kt)("h2",{id:"supervisor-group"},"[supervisor]"," group"),(0,a.kt)("p",null,"The supervisor group defines the parameters to run the supervisor service."),(0,a.kt)("h3",{id:"domainserverpath-string"},"domainServerPath (string)"),(0,a.kt)("p",null,"The absolute path to the UNIX domain socket used by the supervisor service."),(0,a.kt)("h3",{id:"delim-integer"},"delim (integer)"),(0,a.kt)("p",null,"The decimal ASCII number used to delimit command parameters."),(0,a.kt)("h2",{id:"ap-group"},"[ap]"," group"),(0,a.kt)("p",null,"The ap groups defines all the paremeters to run ",(0,a.kt)("inlineCode",{parentName:"p"},"ap")," service. Most of the parameters are inherited from the ",(0,a.kt)("inlineCode",{parentName:"p"},"hostapd")," config file."),(0,a.kt)("h3",{id:"apbinpath-string"},"apBinPath (string)"),(0,a.kt)("p",null,"Absolute path to the ",(0,a.kt)("inlineCode",{parentName:"p"},"hostapd")," binary."),(0,a.kt)("h3",{id:"apfilepath-string"},"apFilePath (string)"),(0,a.kt)("p",null,"Absolute path to the ",(0,a.kt)("inlineCode",{parentName:"p"},"hostapd")," configuration file."),(0,a.kt)("h3",{id:"aplogpath-string"},"apLogPath (string)"),(0,a.kt)("p",null,"Absolute path to the ",(0,a.kt)("inlineCode",{parentName:"p"},"hostapd")," log file. If empty no log file is generated"),(0,a.kt)("h3",{id:"interface-string"},"interface (string)"),(0,a.kt)("p",null,"Inherited from ",(0,a.kt)("a",{parentName:"p",href:"https://w1.fi/cgit/hostap/plain/hostapd/hostapd.conf"},"hostapd.conf")),(0,a.kt)("h3",{id:"vlantaggedinterface-string"},"vlanTaggedInterface (string)"),(0,a.kt)("p",null,"Interface name for vlan tagging"),(0,a.kt)("h3",{id:"ssid-string"},"ssid (string)"),(0,a.kt)("p",null,"Inherited from ",(0,a.kt)("a",{parentName:"p",href:"https://w1.fi/cgit/hostap/plain/hostapd/hostapd.conf"},"hostapd.conf")),(0,a.kt)("h3",{id:"wpapassphrase-string"},"wpaPassphrase (string)"),(0,a.kt)("p",null,"Inherited from ",(0,a.kt)("a",{parentName:"p",href:"https://w1.fi/cgit/hostap/plain/hostapd/hostapd.conf"},"hostapd.conf")),(0,a.kt)("h3",{id:"bridge-string"},"bridge (string)"),(0,a.kt)("p",null,"Inherited from ",(0,a.kt)("a",{parentName:"p",href:"https://w1.fi/cgit/hostap/plain/hostapd/hostapd.conf"},"hostapd.conf")),(0,a.kt)("h3",{id:"driver-string"},"driver (string)"),(0,a.kt)("p",null,"Inherited from ",(0,a.kt)("a",{parentName:"p",href:"https://w1.fi/cgit/hostap/plain/hostapd/hostapd.conf"},"hostapd.conf")),(0,a.kt)("h3",{id:"hwmode-string"},"hwMode (string)"),(0,a.kt)("p",null,"Inherited from ",(0,a.kt)("a",{parentName:"p",href:"https://w1.fi/cgit/hostap/plain/hostapd/hostapd.conf"},"hostapd.conf")),(0,a.kt)("h3",{id:"channel-integer"},"channel (integer)"),(0,a.kt)("p",null,"Inherited from ",(0,a.kt)("a",{parentName:"p",href:"https://w1.fi/cgit/hostap/plain/hostapd/hostapd.conf"},"hostapd.conf")),(0,a.kt)("h3",{id:"wmmenabled-integer"},"wmmEnabled (integer)"),(0,a.kt)("p",null,"Inherited from ",(0,a.kt)("a",{parentName:"p",href:"https://w1.fi/cgit/hostap/plain/hostapd/hostapd.conf"},"hostapd.conf")),(0,a.kt)("h3",{id:"authalgs-integer"},"authAlgs (integer)"),(0,a.kt)("p",null,"Inherited from ",(0,a.kt)("a",{parentName:"p",href:"https://w1.fi/cgit/hostap/plain/hostapd/hostapd.conf"},"hostapd.conf")),(0,a.kt)("h3",{id:"wpa-integer"},"wpa (integer)"),(0,a.kt)("p",null,"Inherited from ",(0,a.kt)("a",{parentName:"p",href:"https://w1.fi/cgit/hostap/plain/hostapd/hostapd.conf"},"hostapd.conf")),(0,a.kt)("h3",{id:"wpakeymgmt-string"},"wpaKeyMgmt (string)"),(0,a.kt)("p",null,"Inherited from ",(0,a.kt)("a",{parentName:"p",href:"https://w1.fi/cgit/hostap/plain/hostapd/hostapd.conf"},"hostapd.conf")),(0,a.kt)("h3",{id:"rsnpairwise-string"},"rsnPairwise (string)"),(0,a.kt)("p",null,"Inherited from ",(0,a.kt)("a",{parentName:"p",href:"https://w1.fi/cgit/hostap/plain/hostapd/hostapd.conf"},"hostapd.conf")),(0,a.kt)("h3",{id:"ctrlinterface-string"},"ctrlInterface (string)"),(0,a.kt)("p",null,"Inherited from ",(0,a.kt)("a",{parentName:"p",href:"https://w1.fi/cgit/hostap/plain/hostapd/hostapd.conf"},"hostapd.conf")),(0,a.kt)("h3",{id:"macaddracl-integer"},"macaddrAcl (integer)"),(0,a.kt)("p",null,"Inherited from ",(0,a.kt)("a",{parentName:"p",href:"https://w1.fi/cgit/hostap/plain/hostapd/hostapd.conf"},"hostapd.conf")),(0,a.kt)("h3",{id:"dynamicvlan-integer"},"dynamicVlan (integer)"),(0,a.kt)("p",null,"Inherited from ",(0,a.kt)("a",{parentName:"p",href:"https://w1.fi/cgit/hostap/plain/hostapd/hostapd.conf"},"hostapd.conf")),(0,a.kt)("h3",{id:"vlanbridge-string"},"vlanBridge (string)"),(0,a.kt)("p",null,"Inherited from ",(0,a.kt)("a",{parentName:"p",href:"https://w1.fi/cgit/hostap/plain/hostapd/hostapd.conf"},"hostapd.conf")),(0,a.kt)("h3",{id:"vlanfile-string"},"vlanFile (string)"),(0,a.kt)("p",null,"Inherited from ",(0,a.kt)("a",{parentName:"p",href:"https://w1.fi/cgit/hostap/plain/hostapd/hostapd.conf"},"hostapd.conf")),(0,a.kt)("h3",{id:"loggerstdout-integer"},"loggerStdout (integer)"),(0,a.kt)("p",null,"Inherited from ",(0,a.kt)("a",{parentName:"p",href:"https://w1.fi/cgit/hostap/plain/hostapd/hostapd.conf"},"hostapd.conf")),(0,a.kt)("h3",{id:"loggerstdoutlevel-integer"},"loggerStdoutLevel (integer)"),(0,a.kt)("p",null,"Inherited from ",(0,a.kt)("a",{parentName:"p",href:"https://w1.fi/cgit/hostap/plain/hostapd/hostapd.conf"},"hostapd.conf")),(0,a.kt)("h3",{id:"loggersyslog-integer"},"loggerSyslog (integer)"),(0,a.kt)("p",null,"Inherited from ",(0,a.kt)("a",{parentName:"p",href:"https://w1.fi/cgit/hostap/plain/hostapd/hostapd.conf"},"hostapd.conf")),(0,a.kt)("h3",{id:"loggersysloglevel-integer"},"loggerSyslogLevel (integer)"),(0,a.kt)("p",null,"Inherited from ",(0,a.kt)("a",{parentName:"p",href:"https://w1.fi/cgit/hostap/plain/hostapd/hostapd.conf"},"hostapd.conf")),(0,a.kt)("h3",{id:"ignorebroadcastssid-integer"},"ignoreBroadcastSsid (integer)"),(0,a.kt)("p",null,"Inherited from ",(0,a.kt)("a",{parentName:"p",href:"https://w1.fi/cgit/hostap/plain/hostapd/hostapd.conf"},"hostapd.conf")),(0,a.kt)("h3",{id:"wpapskradius-integer"},"wpaPskRadius (integer)"),(0,a.kt)("p",null,"Inherited from ",(0,a.kt)("a",{parentName:"p",href:"https://w1.fi/cgit/hostap/plain/hostapd/hostapd.conf"},"hostapd.conf")),(0,a.kt)("h2",{id:"radius-group"},"[radius]"," group"),(0,a.kt)("p",null,"The radius group defines the port, IP and network mask for creating the RADIUS server."),(0,a.kt)("h3",{id:"port-integer"},"port (integer)"),(0,a.kt)("p",null,"The port value for the RADIUS server."),(0,a.kt)("h3",{id:"clientip-string"},"clientIP (string)"),(0,a.kt)("p",null,"The connecting client IP with format ",(0,a.kt)("inlineCode",{parentName:"p"},"x.y.z.q"),". Current config uses ",(0,a.kt)("inlineCode",{parentName:"p"},"localhost")," (127.0.0.1)."),(0,a.kt)("h3",{id:"clientmask-integer"},"clientMask (integer)"),(0,a.kt)("p",null,"The client IP network mask encoding bit-length of the prefix."),(0,a.kt)("h3",{id:"serverip-string"},"serverIP (string)"),(0,a.kt)("p",null,"The RADIUS server IP. Current config uses ",(0,a.kt)("inlineCode",{parentName:"p"},"localhost")," (127.0.0.1)."),(0,a.kt)("h3",{id:"servermask-integer"},"serverMask (integer)"),(0,a.kt)("p",null,"The server IP network mask encoding bit-length of the prefix."),(0,a.kt)("h3",{id:"secret-string"},"secret (string)"),(0,a.kt)("p",null,"The RADIUS server password used by the clients."),(0,a.kt)("h2",{id:"nat-group"},"[nat]"," group"),(0,a.kt)("p",null,"The nat group defines the parameter for NAT interface."),(0,a.kt)("h3",{id:"natinterface-string"},"natInterface (string)"),(0,a.kt)("p",null,"The NAT interface name."),(0,a.kt)("h2",{id:"dns-group"},"[dns]"," group"),(0,a.kt)("p",null,"The dns groups defines the parameters for the DNS server configuration."),(0,a.kt)("h3",{id:"servers-string"},"servers (string)"),(0,a.kt)("p",null,"A comma delimited string of dns server IP addresses with the format ",(0,a.kt)("inlineCode",{parentName:"p"},"x.y.z.q,a.b.c.d,..."),"."),(0,a.kt)("h3",{id:"mdnsbinpath-string"},"mdnsBinPath (string)"),(0,a.kt)("p",null,"The path to the ",(0,a.kt)("inlineCode",{parentName:"p"},"mdnsf")," service."),(0,a.kt)("h3",{id:"mdnsreflectip4-boolean"},"mdnsReflectIp4 (boolean)"),(0,a.kt)("p",null,"If set to ",(0,a.kt)("inlineCode",{parentName:"p"},"true")," the mdns service will reflect IP4 mdns packets."),(0,a.kt)("h3",{id:"mdnsreflectip6-boolean"},"mdnsReflectIp6 (boolean)"),(0,a.kt)("p",null,"If set to ",(0,a.kt)("inlineCode",{parentName:"p"},"true")," the mdns service will reflect IP6 mdns packets."),(0,a.kt)("h3",{id:"mdnsfilter-string"},"mdnsFilter (string)"),(0,a.kt)("p",null,"The ",(0,a.kt)("inlineCode",{parentName:"p"},"mdns")," service filter string used by pcap library to track internal IP connections. The filter is based on the ",(0,a.kt)("inlineCode",{parentName:"p"},"interface")," IP addresses."),(0,a.kt)("h2",{id:"dhcp-group"},"[dhcp]"," group"),(0,a.kt)("p",null,"The dhpc groups defines the parameters for the DHCP server configuration."),(0,a.kt)("h3",{id:"dhcpbinpath-string"},"dhcpBinPath (string)"),(0,a.kt)("p",null,"The path to the DHCP server"),(0,a.kt)("h3",{id:"dhcpconfigpath-string"},"dhcpConfigPath (string)"),(0,a.kt)("p",null,"The path to the DHCP server configuration file"),(0,a.kt)("h3",{id:"dhcpscriptpath-string"},"dhcpScriptPath (string)"),(0,a.kt)("p",null,"The path to the DHCP server aditional executable script"),(0,a.kt)("h3",{id:"dhcpleasefilepath-string"},"dhcpLeasefilePath (string)"),(0,a.kt)("p",null,"The path to the DHCP lease file"),(0,a.kt)("h3",{id:"dhcprangei-string"},"dhcpRangei (string)"),(0,a.kt)("p",null,"The DHCP configuration indexed by ",(0,a.kt)("inlineCode",{parentName:"p"},"i\u22650"),". It has the followig format:"),(0,a.kt)("pre",null,(0,a.kt)("code",{parentName:"pre"},"vlanid,ip_low,ip_up,mask,time\n")),(0,a.kt)("p",null,",where"),(0,a.kt)("ul",null,(0,a.kt)("li",{parentName:"ul"},(0,a.kt)("inlineCode",{parentName:"li"},"vlanid")," - the VLAN ID"),(0,a.kt)("li",{parentName:"ul"},(0,a.kt)("inlineCode",{parentName:"li"},"ip_low")," - the lower bound for IP subnet"),(0,a.kt)("li",{parentName:"ul"},(0,a.kt)("inlineCode",{parentName:"li"},"up_low")," - the upper bound for IP subnet"),(0,a.kt)("li",{parentName:"ul"},(0,a.kt)("inlineCode",{parentName:"li"},"mask")," - the subnet mask"),(0,a.kt)("li",{parentName:"ul"},(0,a.kt)("inlineCode",{parentName:"li"},"time")," - the lease time (dnsmasq format)")),(0,a.kt)("h2",{id:"interfaces-groups"},"[interfaces]"," groups"),(0,a.kt)("p",null,"The interfaces group defines the parameters for WiFi subnet interfaces."),(0,a.kt)("h3",{id:"ifi-string"},"ifi (string)"),(0,a.kt)("p",null,"The ",(0,a.kt)("inlineCode",{parentName:"p"},"if")," indexed by ",(0,a.kt)("inlineCode",{parentName:"p"},"i\u22650")," defines the network interfaces for a particular subnet. It has the following format:"),(0,a.kt)("pre",null,(0,a.kt)("code",{parentName:"pre"},"vlanid,ip0,ipn,mask\n")),(0,a.kt)("p",null,"where"),(0,a.kt)("ul",null,(0,a.kt)("li",{parentName:"ul"},(0,a.kt)("inlineCode",{parentName:"li"},"vlanid")," - is the VLAN ID,"),(0,a.kt)("li",{parentName:"ul"},(0,a.kt)("inlineCode",{parentName:"li"},"ip0")," - the subnet starting IP address with format ",(0,a.kt)("inlineCode",{parentName:"li"},"x.y.z.q"),","),(0,a.kt)("li",{parentName:"ul"},(0,a.kt)("inlineCode",{parentName:"li"},"ipn")," - the subnet ending IP address with format ",(0,a.kt)("inlineCode",{parentName:"li"},"x.y.z.q")," and"),(0,a.kt)("li",{parentName:"ul"},(0,a.kt)("inlineCode",{parentName:"li"},"mask")," - the subnet mask IP address with format ",(0,a.kt)("inlineCode",{parentName:"li"},"x.y.z.q"),".")))}h.isMDXComponent=!0}}]);