# Compile library libnetlink
if (BUILD_NETLINK_LIB AND NOT (BUILD_ONLY_DOCS))
  set(LIBNETLINK_INCLUDE_DIR "${CMAKE_SOURCE_DIR}/lib/libnetlink/include")
  set(LIBNETLINK_UAPI_INCLUDE_DIR "${CMAKE_SOURCE_DIR}/lib/libnetlink/include/uapi")
  find_library(LIBNETLINK_LIB NAMES libnetlink PATHS "${CMAKE_SOURCE_DIR}/lib/libnetlink/build/lib")
  if (LIBNETLINK_LIB)
    message("Found libnetlink library: ${LIBNETLINK_LIB}")
  ELSE ()
    execute_process(COMMAND bash "${CMAKE_SOURCE_DIR}/lib/compile_libnetlink.sh")
    find_library(LIBNETLINK_LIB NAMES libnetlink PATHS "${CMAKE_SOURCE_DIR}/lib/libnetlink/build/lib")
  endif ()
  find_library(LL_MAP_LIB NAMES ll_map PATHS "${CMAKE_SOURCE_DIR}/lib/libnetlink/build/lib")
  message("Found ll_map library: ${LL_MAP_LIB}")
  find_library(UTILS_LIB NAMES utils PATHS "${CMAKE_SOURCE_DIR}/lib/libnetlink/build/lib")
  message("Found utils library: ${UTILS_LIB}")
  find_library(RT_NAMES_LIB NAMES rt_names PATHS "${CMAKE_SOURCE_DIR}/lib/libnetlink/build/lib")
  message("Found rt_names library: ${RT_NAMES_LIB}")
  find_library(LL_TYPES_LIB NAMES ll_types PATHS "${CMAKE_SOURCE_DIR}/lib/libnetlink/build/lib")
  message("Found ll_types library: ${LL_TYPES_LIB}")
  find_library(LL_PROTO_LIB NAMES ll_proto PATHS "${CMAKE_SOURCE_DIR}/lib/libnetlink/build/lib")
  message("Found ll_types library: ${LL_PROTO_LIB}")

  find_path(LibNL_INCLUDE_DIR netlink/netlink.h
  	/usr/include
  	/usr/include/libnl3
  	/usr/local/include
  	/usr/local/include/libnl3
  )

  find_library(LibNL_LIBRARY NAMES nl nl-3)
  # find_library(LibNL_ROUTE_LIBRARY NAMES nl-route nl-route-3)
  # find_library(LibNL_NETFILTER_LIBRARY NAMES nl-nf nl-nf-3)
  find_library(LibNL_GENL_LIBRARY NAMES nl-genl nl-genl-3)

  if (LibNL_INCLUDE_DIR AND LibNL_LIBRARY)
  	set(LibNL_FOUND TRUE)
  endif ()

  if (LibNL_FOUND)
  	if (NOT LibNL_FIND_QUIETLY)
      message("Found netlink library: ${LibNL_LIBRARY}")
      # message("Found netlink route library: ${LibNL_ROUTE_LIBRARY}")
      # message("Found netlink netfilter library: ${LibNL_NETFILTER_LIBRARY}")
      message("Found netlink genl library: ${LibNL_GENL_LIBRARY}")
      message("Found netlink includes: ${LibNL_INCLUDE_DIR}")
  	endif ()
  ELSE ()
  	if (LibNL_FIND_REQUIRED)
  		message("Netlink version 3 development packages cannot be found.")
  		message("In Debian/Ubuntu, they may be called:")
  		message("libnl-3-dev libnl-genl-3dev libnl-nf-3-dev libnl-route-3-dev")
  		message(FATAL_ERROR "Could not find netlink library.")
  	endif ()
  endif ()
endif ()
